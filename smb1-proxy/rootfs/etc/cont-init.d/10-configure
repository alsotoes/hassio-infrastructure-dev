#!/usr/bin/with-contenv bashio
set -euo pipefail

TC_HOST="$(bashio::config 'tc_host')"
TC_SHARE="$(bashio::config 'tc_share')"
TC_USER="$(bashio::config 'tc_username')"
TC_PASS="$(bashio::config 'tc_password')"

TC_DOMAIN="$(bashio::config 'tc_domain' || echo '')"
MOUNT_POINT="$(bashio::config 'mount_point')"
REXPORT_NAME="$(bashio::config 'reexport_share_name')"
ALLOW_NTLMV1="$(bashio::config 'allow_ntlmv1')"
ALLOW_SMB1="$(bashio::config 'allow_smb1')"

if bashio::config.has_value 'hosts_allow'; then
  HOSTS_ALLOW_JSON="$(bashio::config 'hosts_allow' || echo '[]')"
else
  HOSTS_ALLOW_JSON='[]'
fi
if bashio::config.has_value 'interfaces'; then
  INTERFACES_JSON="$(bashio::config 'interfaces' || echo '[]')"
else
  INTERFACES_JSON='[]'
fi

# Ensure valid JSON arrays
[ "${HOSTS_ALLOW_JSON}" = "null" ] && HOSTS_ALLOW_JSON='[]'
[ "${INTERFACES_JSON}" = "null" ] && INTERFACES_JSON='[]'
[ -z "${HOSTS_ALLOW_JSON}" ] && HOSTS_ALLOW_JSON='[]'
[ -z "${INTERFACES_JSON}" ] && INTERFACES_JSON='[]'

HOSTS_ALLOW="$(echo "${HOSTS_ALLOW_JSON}" | jq -r '.[]? // empty' 2>/dev/null | tr '\n' ' ' | xargs || echo '')"
INTERFACES="$(echo "${INTERFACES_JSON}" | jq -r '.[]? // empty' 2>/dev/null | tr '\n' ' ' | xargs || echo '')"

NETBIOS_NAME_OPT="$(bashio::config 'netbios_name' || true)"
if [ -n "${NETBIOS_NAME_OPT:-}" ]; then
  NETBIOS_NAME="${NETBIOS_NAME_OPT}"
else
  HN="$(hostname | tr '[:lower:]' '[:upper:]')"
  NETBIOS_NAME="SMB1GW-${HN}"
  NETBIOS_NAME="${NETBIOS_NAME:0:15}"
fi

for dir in "${MOUNT_POINT}" /data /etc/samba /root/.smb /run/samba /share; do
  mkdir -p "$dir" >/dev/null 2>&1 || true
done

cat > /etc/samba/smb.conf <<CONF
[global]
   client min protocol = $( [ "${ALLOW_SMB1}" = "true" ] && echo NT1 || echo SMB2 )
   client max protocol = SMB3
   $( [ "${ALLOW_NTLMV1}" = "true" ] && echo "client ntlmv2 auth = no" || echo "client ntlmv2 auth = yes" )
   $( [ "${ALLOW_NTLMV1}" = "true" ] && echo "ntlm auth = yes" || echo "ntlm auth = no" )
CONF

AUTH_FILE="/root/.smb/smbnetfs.auth"
cat > "${AUTH_FILE}" <<EOF
auth "${TC_HOST}" "${TC_SHARE}" "${TC_USER}" "${TC_PASS}" "${TC_DOMAIN}"
EOF
chmod 600 "${AUTH_FILE}"

{
  echo "[global]"
  echo "   netbios name = ${NETBIOS_NAME}"
  echo "   server role = standalone server"
  echo "   server string = SMB1 TimeCapsule Gateway"
  echo "   workgroup = WORKGROUP"
  echo "   log file = /dev/stdout"
  echo "   max log size = 0"
  echo "   map to guest = Bad User"
  echo "   passdb backend = tdbsam"
  echo "   server min protocol = SMB2"
  echo "   server max protocol = SMB3"
  echo "   panic action = /bin/true"
  if [ "${ALLOW_NTLMV1}" = "true" ]; then
    echo "   ntlm auth = yes"
  else
    echo "   ntlm auth = no"
  fi
  if [ -n "${INTERFACES}" ]; then
    echo "   interfaces = ${INTERFACES}"
    echo "   bind interfaces only = yes"
  fi
  if [ -n "${HOSTS_ALLOW}" ]; then
    echo "   hosts allow = ${HOSTS_ALLOW}"
  fi
  echo ""
  echo "[${REXPORT_NAME}]"
  echo "   path = ${MOUNT_POINT}"
  echo "   browseable = yes"
  echo "   writeable = yes"
  echo "   read only = no"
  echo "   guest ok = no"
  echo "   force user = root"
  echo "   create mask = 0644"
  echo "   directory mask = 0755"
} > /etc/samba/smb-server.conf

if ! id -u "${TC_USER}" >/dev/null 2>&1; then
  useradd -M -s /usr/sbin/nologin "${TC_USER}" || true
fi

if pdbedit -L | grep -q "^${TC_USER}:"; then
  (echo "${TC_PASS}"; echo "${TC_PASS}") | smbpasswd -s "${TC_USER}" || true
else
  (echo "${TC_PASS}"; echo "${TC_PASS}") | smbpasswd -a -s "${TC_USER}"
fi

bashio::log.info "Configuration rendered with netbios name '${NETBIOS_NAME}'."
